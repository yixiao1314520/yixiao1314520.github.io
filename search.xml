<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>CentOS 8 安装</title>
      <link href="/post/5.html"/>
      <url>/post/5.html</url>
      
        <content type="html"><![CDATA[<h3 id="CentOS-8-安装"><a href="#CentOS-8-安装" class="headerlink" title="CentOS 8 安装"></a>CentOS 8 安装</h3><h4 id="第一步：下载-CentOS-8-ISO-文件"><a href="#第一步：下载-CentOS-8-ISO-文件" class="headerlink" title="第一步：下载 CentOS 8 ISO 文件"></a>第一步：下载 CentOS 8 ISO 文件</h4><p>在<a href="https://mirrors.aliyun.com/centos/8/isos/x86_64/">开源镜像站-阿里云</a>下载 CentOS 8 ISO 文件</p><p><img src="/post/5/2.png" alt="image-20250914214227197"></p><h4 id="第二步：-创建-CentOS-8-启动介质"><a href="#第二步：-创建-CentOS-8-启动介质" class="headerlink" title="第二步： 创建 CentOS 8 启动介质"></a>第二步： 创建 CentOS 8 启动介质</h4><h5 id="1-在Vmware新建虚拟机，基础配置"><a href="#1-在Vmware新建虚拟机，基础配置" class="headerlink" title="1.在Vmware新建虚拟机，基础配置"></a>1.在Vmware新建虚拟机，基础配置</h5><p><img src="/post/5/1.png" alt="img"></p><p><img src="/post/5/3.png" alt="image-20250914214253431"></p><p><img src="/post/5/16.png" alt="img"></p><p><img src="/post/5/4.png" alt="image-20250914214320797"></p><p><img src="/post/5/5.png" alt="image-20250914214331954"></p><p><img src="/post/5/6.png" alt="image-20250914214342816"></p><h5 id="2-开始编辑基础属性"><a href="#2-开始编辑基础属性" class="headerlink" title="2.开始编辑基础属性"></a>2.开始编辑基础属性</h5><p><img src="/post/5/7.png" alt="image-20250914214524715"><br><img src="/post/5/8.png" alt="image-20250914214719787"></p><h5 id="3-启动，等待安装完成"><a href="#3-启动，等待安装完成" class="headerlink" title="3. 启动，等待安装完成"></a>3. 启动，等待安装完成</h5><p><img src="/post/5/9.png" alt="image-20250914215025460"></p><h5 id="4-接着完成基础配置项"><a href="#4-接着完成基础配置项" class="headerlink" title="4. 接着完成基础配置项"></a>4. 接着完成基础配置项</h5><p><img src="/post/5/10.png" alt="image-20250914215219933"><br><img src="/post/5/11.png" alt="image-20250914215340825"><br><img src="/post/5/12.png" alt="image-20250914215630501"><br><img src="/post/5/13.png" alt="image-20250914215649358"></p><h5 id="5-安装完输入刚才设置的密码"><a href="#5-安装完输入刚才设置的密码" class="headerlink" title="5. 安装完输入刚才设置的密码"></a>5. 安装完输入刚才设置的密码</h5><p><img src="/post/5/14.png" alt="image-20250914215832511"></p><p><img src="/post/5/15.png" alt="image-20250914220110366"></p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>StringBuilder和StringBuffer区别</title>
      <link href="/post/4.html"/>
      <url>/post/4.html</url>
      
        <content type="html"><![CDATA[<h2 id="相同点"><a href="#相同点" class="headerlink" title="相同点"></a>相同点</h2><ol><li>用法一样，作用一样</li></ol><h2 id="不同点"><a href="#不同点" class="headerlink" title="不同点"></a>不同点</h2><ul><li>StringBuilder：拼接效率比StringBuffer高，线程不安全</li><li>StringBuffer：效率比较低，线程安全</li><li>拼接效率：StringBuilder &gt; StringBuffer &gt; String</li></ul><h2 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h2><p>String：适用于少量的字符串操作的情况<br>StringBuilder：适用于单线程下在字符缓冲区进行大量操作的情况<br>StringBuffer：适用多线程下在字符缓冲区进行大量操作的情况</p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>String</title>
      <link href="/post/3.html"/>
      <url>/post/3.html</url>
      
        <content type="html"><![CDATA[<h2 id="String-s-new-String-“abc”-有几个对象？"><a href="#String-s-new-String-“abc”-有几个对象？" class="headerlink" title="String s &#x3D; new String(“abc”)有几个对象？"></a>String s &#x3D; new String(“abc”)有几个对象？</h2><p>答：<span style="background:#fff88f">两个对象</span>，<em>new本身</em> 和 <em>“abc”</em></p><h2 id="String-s-new-String-“abc”-创建了几个对象？"><a href="#String-s-new-String-“abc”-创建了几个对象？" class="headerlink" title="String s &#x3D; new String (“abc”)创建了几个对象？"></a>String s &#x3D; new String (“abc”)创建了几个对象？</h2><p>答：如果之前创建了abc，那么只创建了<span style="background:#fff88f">一个</span>，因为abc不用单独再创建了，直接共享就可以<br>答：如果之前没创建abc，那么要创建<span style="background:#fff88f">两个</span>，先创建abc，再创建new</p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>Java语言特点</title>
      <link href="/post/2.html"/>
      <url>/post/2.html</url>
      
        <content type="html"><![CDATA[<ol><li>简单易学</li><li>面向对象</li><li>平台无关性</li><li>支持多线程</li><li>可靠性</li><li>安全性</li><li>高效性</li><li>支持网络编程并且很方便</li><li>编译和解释共存</li></ol>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>Java SE  vs  Java EE</title>
      <link href="/post/1.html"/>
      <url>/post/1.html</url>
      
        <content type="html"><![CDATA[<ol><li>Java SE（Java Platform，Standard Edition）：<em>Java 平台标准版</em>，Java 编程语言的基础，它包含了<em>支持 Java 应用程序开发</em>和<em>运行的核心类库</em>以及<em>虚拟机</em>等核心组件。Java SE 可以用于构建桌面应用程序或简单的服务器应用程序。<ol><li>Java EE（Java Platform, Enterprise Edition ）：<em>Java 平台企业版</em>，建立在 Java SE 的基础上，包含了<em>支持企业级应用程序开发</em>和<em>部署的标准和规范</em>（比如 Servlet、JSP、EJB、JDBC、JPA、JTA、JavaMail、JMS）。 Java EE 可以用于构建分布式、可移植、健壮、可伸缩和安全的服务端 Java 应用程序，例如 Web 应用程序。</li></ol></li><li>总结：Java SE 是 Java 的<em>基础</em>版本，Java EE 是 Java 的<em>高级</em>版本。Java SE 更适合开发桌面应用程序或简单的服务器应用程序，Java EE 更适合开发复杂的企业级应用程序或 Web 应用程序。</li></ol>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>==和equals的区别</title>
      <link href="/post/0.html"/>
      <url>/post/0.html</url>
      
        <content type="html"><![CDATA[<ul><li>“ &#x3D;&#x3D; “可以作用在 <em>基础数据类型</em> 中，也可以作用在 <em>引用数据类型中</em></li><li>equals()只能作用在<em>引用数据类型</em>(两个对象)，无法作用在基本数据类型</li><li>“ &#x3D;&#x3D; “作用在 <em>基础数据类型</em> 时比较的是 <em>值</em> 是否相同，作用在 <em>引用数据类型</em> 时比较的是两个对象的 <em>内存地址</em> 是否一致(是否指向的是相同对象)</li><li>equals()方法在不重写的情况下调用的是” &#x3D;&#x3D; “也就是比较两个对象的 <em>内存地址</em> 是否一致，但是equals()是可以重写的，如果重写后具体对比的含义根据重写规则而定</li></ul>]]></content>
      
      
      
    </entry>
    
    
  
  
    
    
    <entry>
      <title></title>
      <link href="/about/index.html"/>
      <url>/about/index.html</url>
      
        <content type="html"><![CDATA[]]></content>
      
    </entry>
    
    
    
    <entry>
      <title>友链</title>
      <link href="/links/index.html"/>
      <url>/links/index.html</url>
      
        <content type="html"><![CDATA[<p>wsq: <a href="https://2656172491.github.io/">https://2656172491.github.io</a></p>]]></content>
      
    </entry>
    
    
    
    <entry>
      <title></title>
      <link href="/music/index.html"/>
      <url>/music/index.html</url>
      
        <content type="html"><![CDATA[<!DOCTYPE html><html lang="en"><head>  <meta charset="UTF-8">  <meta name="viewport" content="width=device-width, initial-scale=1.0">  <title>Document</title></head><body>  111111222222222</body></html>]]></content>
      
    </entry>
    
    
  
</search>
